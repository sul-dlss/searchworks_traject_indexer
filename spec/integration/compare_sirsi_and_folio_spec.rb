require 'spec_helper'

describe 'comparing against a well-known location full of documents generated by solrmarc' do
  skip unless ENV['OKAPI_URL']

  let(:folio_indexer) do
    Traject::Indexer.new.tap do |i|
      i.load_config_file('./lib/traject/config/folio_config.rb')
    end
  end

  let(:sirsi_indexer) do
    Traject::Indexer.new.tap do |i|
      i.load_config_file('./lib/traject/config/sirsi_config.rb')
    end
  end

  let(:marc_record) do
    MARC::XMLReader.new(StringIO.new(HTTP.get("https://searchworks.stanford.edu/view/#{catkey}.marcxml").body.to_s)).to_a.first
  end

  context '' do
    let(:catkey) { ENV['catkey'] || '1004359' }

    let(:sirsi_record) { sirsi_indexer.map_record(marc_record) }
    let(:folio_record) { folio_indexer.map_record(Traject::FolioReader::FolioRecord.fetch(catkey)) }

    let(:skipped_fields) do
      [
        'marcxml', # FOLIO records have slightly different MARC records
        'all_search' # FOLIO records have slightly different MARC records
      ]
    end
    it 'matches' do
      aggregate_failures "testing response" do
        sirsi_record.keys.each do |key|
          next if skipped_fields.include? key
          expect(folio_record[key]).to eq(sirsi_record[key]), "expected #{key} to match \n\nSIRSI:\n#{sirsi_record[key].inspect}\nFOLIO:\n#{folio_record[key].inspect}" if folio_record[key]
        end
      end
    end
  end


end
